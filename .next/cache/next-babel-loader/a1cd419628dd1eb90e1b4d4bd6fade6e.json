{"ast":null,"code":"var _jsxFileName = \"/home/guga/React-avancado/landing-page/src/components/SectionReviews/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Slider from 'react-slick';\nimport Container from 'components/Container';\nimport Heading from 'components/Heading';\nimport ReviewCard from 'components/ReviewCard';\nimport * as S from './styles';\nconst settings = {\n  dots: true,\n  arrows: false,\n  slidesToShow: 2,\n  infinite: false,\n  speed: 500,\n  rows: 2,\n  slidesPerRow: 1,\n  slidesToScroll: 2,\n  responsive: [{\n    breakpoint: 768,\n    settings: {\n      slidesToShow: 1,\n      rows: 2,\n      slidesPerRow: 1,\n      slidesToScroll: 1\n    }\n  }]\n};\n\nconst SectionReviews = ({\n  title,\n  reviews\n}) => /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Heading, {\n  reverseColor: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n}, title), /*#__PURE__*/React.createElement(S.Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Slider, _extends({}, settings, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}), reviews.map(({\n  name,\n  photo,\n  text\n}, index) => /*#__PURE__*/React.createElement(ReviewCard, {\n  key: index,\n  name: name,\n  image: photo.url,\n  description: text,\n  id: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 11\n  }\n})))));\n\nexport default SectionReviews;","map":{"version":3,"sources":["/home/guga/React-avancado/landing-page/src/components/SectionReviews/index.tsx"],"names":["React","Slider","Container","Heading","ReviewCard","S","settings","dots","arrows","slidesToShow","infinite","speed","rows","slidesPerRow","slidesToScroll","responsive","breakpoint","SectionReviews","title","reviews","map","name","photo","text","index","url"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAGA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE,IADS;AAEfC,EAAAA,MAAM,EAAE,KAFO;AAGfC,EAAAA,YAAY,EAAE,CAHC;AAIfC,EAAAA,QAAQ,EAAE,KAJK;AAKfC,EAAAA,KAAK,EAAE,GALQ;AAMfC,EAAAA,IAAI,EAAE,CANS;AAOfC,EAAAA,YAAY,EAAE,CAPC;AAQfC,EAAAA,cAAc,EAAE,CARD;AASfC,EAAAA,UAAU,EAAE,CACV;AACEC,IAAAA,UAAU,EAAE,GADd;AAEEV,IAAAA,QAAQ,EAAE;AACRG,MAAAA,YAAY,EAAE,CADN;AAERG,MAAAA,IAAI,EAAE,CAFE;AAGRC,MAAAA,YAAY,EAAE,CAHN;AAIRC,MAAAA,cAAc,EAAE;AAJR;AAFZ,GADU;AATG,CAAjB;;AAsBA,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACrB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,OAAD;AAAS,EAAA,YAAY,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAuBD,KAAvB,CADF,eAGE,oBAAC,CAAD,CAAG,OAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD,eAAYZ,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACGa,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,EAAwBC,KAAxB,kBACX,oBAAC,UAAD;AACE,EAAA,GAAG,EAAEA,KADP;AAEE,EAAA,IAAI,EAAEH,IAFR;AAGE,EAAA,KAAK,EAAEC,KAAK,CAACG,GAHf;AAIE,EAAA,WAAW,EAAEF,IAJf;AAKE,EAAA,EAAE,EAAEC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADH,CADF,CAHF,CADF;;AAoBA,eAAeP,cAAf","sourcesContent":["import React from 'react'\nimport Slider from 'react-slick'\n\nimport Container from 'components/Container'\nimport Heading from 'components/Heading'\nimport ReviewCard from 'components/ReviewCard'\n\nimport * as S from './styles'\nimport { SectionReviewsProps } from 'types/api'\n\nconst settings = {\n  dots: true,\n  arrows: false,\n  slidesToShow: 2,\n  infinite: false,\n  speed: 500,\n  rows: 2,\n  slidesPerRow: 1,\n  slidesToScroll: 2,\n  responsive: [\n    {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 1,\n        rows: 2,\n        slidesPerRow: 1,\n        slidesToScroll: 1\n      }\n    }\n  ]\n}\n\nconst SectionReviews = ({ title, reviews }: SectionReviewsProps) => (\n  <Container>\n    <Heading reverseColor>{title}</Heading>\n\n    <S.Content>\n      <Slider {...settings}>\n        {reviews.map(({ name, photo, text }, index) => (\n          <ReviewCard\n            key={index}\n            name={name}\n            image={photo.url}\n            description={text}\n            id={index}\n          />\n        ))}\n      </Slider>\n    </S.Content>\n  </Container>\n)\n\nexport default SectionReviews\n"]},"metadata":{},"sourceType":"module"}